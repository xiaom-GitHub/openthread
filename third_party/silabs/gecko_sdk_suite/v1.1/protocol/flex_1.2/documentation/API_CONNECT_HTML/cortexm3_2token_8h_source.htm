<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms
   &#160;<span id="projectnumber">Silicon Labs 1.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('cortexm3_2token_8h_source.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">cortexm3/token.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="cortexm3_2token_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#ifndef __PLAT_TOKEN_H__</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __PLAT_TOKEN_H__</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#ifndef __TOKEN_H__</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#error do not include this file directly - include micro/token.h</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#if defined CORTEXM3_EFM32_MICRO</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor"></span><span class="comment">// The manufacturing tokens live outside the Simulated EEPROM.  This means</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">// they are defined differently which is covered in mfg-token.h</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">  #include &quot;efm32/mfg-token.h&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor"></span><span class="comment">// The manufacturing tokens live in the Info Blocks, while all other tokens</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">// live in the Simulated EEPROM.  This means they are defined differently,</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">// which is covered in mfg-token.h</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">  #include &quot;mfg-token.h&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">//-- Build structure defines</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="code" href="cortexm3_2token_8h.htm#a0ae7be91237ca50802b5753c7444e12d">   38</a></span>&#160;<span class="preprocessor">#define DEFINETYPES</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #include &quot;<a class="code" href="token-stack_8h.htm" title="Definitions for stack tokens. See Stack Tokens for documentation.">stack/config/token-stack.h</a>&quot;</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#undef DEFINETYPES</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">//-- Build parameter links</span></div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="code" href="cortexm3_2token_8h.htm#a04cda2ddfec00ccd90721cc1a1e4aad8">   43</a></span>&#160;<span class="preprocessor">#define DEFINETOKENS</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#undef TOKEN_DEF</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">#define TOKEN_DEF(name, creator, iscnt, isidx, type, arraysize, ...) \</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">  TOKEN_##name,</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor"></span><span class="keyword">enum</span> {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor">    #include &quot;<a class="code" href="token-stack_8h.htm" title="Definitions for stack tokens. See Stack Tokens for documentation.">stack/config/token-stack.h</a>&quot;</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  TOKEN_COUNT</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;};</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#undef TOKEN_DEF</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor">#define TOKEN_DEF(name, creator, iscnt, isidx, type, arraysize, ...) \</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">  TOKEN_##name##_SIZE = sizeof(type),</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor"></span><span class="keyword">enum</span> {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor">    #include &quot;<a class="code" href="token-stack_8h.htm" title="Definitions for stack tokens. See Stack Tokens for documentation.">stack/config/token-stack.h</a>&quot;</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;};</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="preprocessor">#undef TOKEN_DEF</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keyword">extern</span> <span class="keyword">const</span> uint16_t <a class="code" href="cortexm3_2token_8h.htm#ab6e7f66a0d5ad0378c1c105a6063d33b">tokenCreators</a>[];</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keyword">extern</span> <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="cortexm3_2token_8h.htm#ab0f313156e1d42db725466c5e0058a74">tokenIsCnt</a>[];</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keyword">extern</span> <span class="keyword">const</span> uint8_t <a class="code" href="cortexm3_2token_8h.htm#a188fe9ebb67d5caca2cfa2313fe024ce">tokenSize</a>[];</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keyword">extern</span> <span class="keyword">const</span> uint8_t <a class="code" href="cortexm3_2token_8h.htm#a71ae57baa2c9c9a8aae4aae4322533fe">tokenArraySize</a>[];</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keyword">extern</span> <span class="keyword">const</span> <span class="keywordtype">void</span> * <span class="keyword">const</span> <a class="code" href="cortexm3_2token_8h.htm#a9c1a133e429101894552bb2fa67bfeef">tokenDefaults</a>[];</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="code" href="cortexm3_2token_8h.htm#a46c430e232fe185227dfb185602a1814">  146</a></span>&#160;<span class="preprocessor">#define COUNTER_TOKEN_PAD        50</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00158"></a><span class="lineno"><a class="code" href="cortexm3_2token_8h.htm#a5189a842b64a8355f6601f129b7edc05">  158</a></span>&#160;<span class="preprocessor">#define TOKEN_DEF(name, creator, iscnt, isidx, type, arraysize, ...) \</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="preprocessor">  typedef type TOKEN_##name##_TYPE;</span></div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="code" href="group__token__stack.htm#gaf9abd8d0c4ff19e503e3477e4b6a863c">  160</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #include &quot;<a class="code" href="token-stack_8h.htm" title="Definitions for stack tokens. See Stack Tokens for documentation.">stack/config/token-stack.h</a>&quot;</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="preprocessor">#undef TOKEN_DEF</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="code" href="group__token__stack.htm#ga5a23ccdc591883ffc8d353ba7174cc75">  163</a></span>&#160;<span class="preprocessor">#undef DEFINETOKENS</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keywordtype">void</span> <a class="code" href="cortexm3_2token_8h.htm#aaf4c149ac8fe23bf48ab142f79fea6b6">halInternalGetTokenData</a>(<span class="keywordtype">void</span> *data, uint16_t token, uint8_t index, uint8_t len);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keywordtype">void</span> <a class="code" href="cortexm3_2token_8h.htm#a40b7284c4a7276cf40371e57b5c8fc8c">halInternalSetTokenData</a>(uint16_t token, uint8_t index, <span class="keywordtype">void</span> *data, uint8_t len);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keywordtype">void</span> <a class="code" href="cortexm3_2token_8h.htm#ac06f01916c1c4e27cb4862921a4bd297">halInternalIncrementCounterToken</a>(uint8_t token);</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">// See hal/micro/token.h for the full explanation of the token API as</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">// instantiated below.</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">//These defines Link the public API to the private internal instance.</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div>
<div class="line"><a name="l00229"></a><span class="lineno"><a class="code" href="cortexm3_2token_8h.htm#a1cdf205aa0e67b9508ce927b52a6875a">  229</a></span>&#160;<span class="preprocessor">#define halCommonGetToken(data, token) \</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="preprocessor">  halInternalGetTokenData(data, token, 0x7F, token##_SIZE)</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00232"></a><span class="lineno"><a class="code" href="cortexm3_2token_8h.htm#a8d7f03bfb03f29e528d36035ecbf4c23">  232</a></span>&#160;<span class="preprocessor">#define halCommonGetIndexedToken(data, token, index) \</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="preprocessor">  halInternalGetTokenData(data, token, index, token##_SIZE)</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00235"></a><span class="lineno"><a class="code" href="cortexm3_2token_8h.htm#adc5c51e10a8f589ec91fa4c840a52a7a">  235</a></span>&#160;<span class="preprocessor">#define halStackGetIndexedToken(data, token, index, size) \</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="preprocessor">  halInternalGetTokenData(data, token, index, size)</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00238"></a><span class="lineno"><a class="code" href="cortexm3_2token_8h.htm#a3140e8c6bd6fa7dfe9a6e5f921298672">  238</a></span>&#160;<span class="preprocessor">#define halStackGetIdxTokenPtrOrData(ptr, token, index) \</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="preprocessor">  halInternalGetIdxTokenPtr(ptr, token, index, token##_SIZE)</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="preprocessor"></span><span class="keywordtype">void</span> <a class="code" href="cortexm3_2token_8h.htm#af9e6697f254212e610c6806b487d8098">halInternalGetIdxTokenPtr</a>(<span class="keywordtype">void</span> *ptr, uint16_t ID, uint8_t index, uint8_t len);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00242"></a><span class="lineno"><a class="code" href="cortexm3_2token_8h.htm#ab7b75375d668ed0a061a3351e879a87e">  242</a></span>&#160;<span class="preprocessor">#define halCommonSetToken(token, data) \</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="preprocessor">  halInternalSetTokenData(token, 0x7F, data, token##_SIZE)</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00245"></a><span class="lineno"><a class="code" href="cortexm3_2token_8h.htm#a632ff9591650d5721a447413a5d1505d">  245</a></span>&#160;<span class="preprocessor">#define halCommonSetIndexedToken(token, index, data) \</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="preprocessor">  halInternalSetTokenData(token, index, data, token##_SIZE)</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00248"></a><span class="lineno"><a class="code" href="cortexm3_2token_8h.htm#a4c48de8d41201457e03c18a91c6e18b5">  248</a></span>&#160;<span class="preprocessor">#define halStackSetIndexedToken(token, index, data, size) \</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="preprocessor">  halInternalSetTokenData(token, index, data, size)</span></div>
<div class="line"><a name="l00250"></a><span class="lineno"><a class="code" href="cortexm3_2token_8h.htm#adf764cbdea00d65edcd07bb9953ad2b7a9415edd3c93923af792c9a4a05c52299">  250</a></span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00251"></a><span class="lineno"><a class="code" href="cortexm3_2token_8h.htm#a93c5e6c239ea037dc42a368b9a875244">  251</a></span>&#160;<span class="preprocessor">#define halCommonIncrementCounterToken(token) \</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="preprocessor">  halInternalIncrementCounterToken(token);</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">// For use only by the EZSP UART protocol</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="preprocessor">#ifdef EZSP_UART</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #ifdef CORTEXM3_EMBER_MICRO</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="preprocessor"></span><span class="preprocessor">    #define halInternalMfgTokenPointer(address) \</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="preprocessor">  ((const void *)(address + FIB_BOTTOM))</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="preprocessor"></span><span class="preprocessor">    #define halInternalMfgIndexedToken(type, address, index) \</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="preprocessor">  (*((const type *)(address + FIB_BOTTOM) + index))</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #endif</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #ifdef CORTEXM3_EFM32_MICRO</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="preprocessor"></span><span class="preprocessor">    #define halInternalMfgTokenPointer(address) \</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="preprocessor">  ((const void *)(USERDATA_BASE | (address &amp; 0x0FFF)))</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="preprocessor"></span><span class="preprocessor">    #define halInternalMfgIndexedToken(type, address, index) \</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="preprocessor">  (*((const type *)(USERDATA_BASE | (address &amp; 0x0FFF)) + index))</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #endif</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="preprocessor">#undef TOKEN_MFG</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="preprocessor">#endif // __PLAT_TOKEN_H__</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms. Silicon Labs 1.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
